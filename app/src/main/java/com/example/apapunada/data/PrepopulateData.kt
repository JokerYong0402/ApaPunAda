package com.example.apapunada.data

import com.example.apapunada.R
import com.example.apapunada.data.dataclass.Feedback
import com.example.apapunada.data.dataclass.FoodDetails
import com.example.apapunada.data.dataclass.MenuItem
import com.example.apapunada.data.dataclass.NutritionFacts
import com.example.apapunada.data.dataclass.Order
import com.example.apapunada.data.dataclass.OrderDetails
import com.example.apapunada.data.dataclass.User
import com.example.apapunada.data.dataclass.Voucher
import com.example.apapunada.data.dataclass.Waitlist

object PrepopulateData {
    val users = listOf(
        User(username = "Anson", email = "anson@gmail.com", password = "imanson", phoneNo = "01559875412", gender = "Male", dob = 1072915200000, role = "Staff", point = 0, status = "Active"),
        User(username = "John", email = "john@gmail.com", password = "john12345", phoneNo = "01524365443", gender = "Male", dob = 1072915200000, role = "User", point = 700, status = "Active"),
        User(username = "Ryan Moey Kai Xiang", email = "ryan@gmail.com", password = "ryanm0525", phoneNo = "0123456789", gender = "Male", dob = 1085443200000, role = "User", point = 423, status = "Active"),
        User(username = "Yong Jia Ying", email = "jiaying@gmail.com", password = "yjy12345", phoneNo = "0137652345", gender = "Female", dob = 1080864000000, role = "User", point = 210, status = "Active"),
        User(username = "Kong Weng Cheng", email = "kongwc@gmail.com", password = "kwc12345", phoneNo = "0147653321", gender = "Male", dob = 1073952000000, role = "User", point = 360, status = "Active"),
        User(username = "Yoong Hong Sheng", email = "yhsheng@gmail.com", password = "yhs12345", phoneNo = "0117593341", gender = "Male", dob = 1072137600000, role = "User", point = 560, status = "Active"),
        User(username = "Siow Ying Long", email = "yinglong@gmail.com", password = "syl2345", phoneNo = "0198654321", gender = "Male", dob = 978307200000, role = "User", point = 150, status = "Active"),
        User(username = "Willis Ong Wei Chen", email = "weichen@gmail.com", password = "wcl2345", phoneNo = "0187654320", gender = "Male", dob = 946684800000, role = "User", point = 670, status = "Active"),
        User(username = "Yow Yee Qin", email = "yeeqin@gmail.com", password = "yql2345", phoneNo = "0137638790", gender = "Male", dob = 982857600000, role = "User", point = 170, status = "Active"),
        User(username = "Ang Yong Tat", email = "yongtat@gmail.com", password = "ytl2345", phoneNo = "0147120791", gender = "Male", dob = 1085155200000, role = "User", point = 390, status = "Active"),
        User(username = "Alden Ling Li Xuan", email = "aldenling@gmail.com", password = "aldenl2345", phoneNo = "0137167561", gender = "Male", dob = 1089561600000, role = "User", point = 210, status = "Active"),
        User(username = "Edison", email = "edison@gmail.com", password = "edisonl2345", phoneNo = "0142333771", gender = "Male", dob = 1093968000000, role = "User", point = 190, status = "Active"),
        User(username = "Jane Smith", email = "jane@gmail.com", password = "password456", phoneNo = "0198765432", gender = "Female", dob = 978307200000, role = "User", point = 150, status = "Active"),
        User(username = "Mark Jackson", email = "mark@gmail.com", password = "password789", phoneNo = "0198765431", gender = "Male", dob = 946684800000, role = "User", point = 200, status = "Active"),
        User(username = "Sara Williams", email = "sara@gmail.com", password = "passwordabc", phoneNo = "0128856789", gender = "Female", dob = 1041379200000, role = "User", point = 80, status = "Disabled"),
        User(username = "Chris Brown", email = "chris@gmail.com", password = "passworddef", phoneNo = "0167890345", gender = "Male", dob = 924076800000, role = "User", point = 120, status = "Active"),
        User(username = "Emily Johnson", email = "emily@gmail.com", password = "passwordghi", phoneNo = "0154321876", gender = "Female", dob = 1035465600000, role = "User", point = 180, status = "Active"),
        User(username = "Michael Clark", email = "michael@gmail.com", password = "passwordjkl", phoneNo = "0189034567", gender = "Male", dob = 955177600000, role = "User", point = 90, status = "Active"),
        User(username = "Amanda Lee", email = "amanda@gmail.com", password = "passwordmno", phoneNo = "0123456781", gender = "Female", dob = 1009372800000, role = "User", point = 140, status = "Active"),
        User(username = "David Moore", email = "david@gmail.com", password = "passwordpqr", phoneNo = "0134567812", gender = "Male", dob = 1001750400000, role = "User", point = 220, status = "Active"),
        User(username = "Lisa Anderson", email = "lisa@gmail.com", password = "passwordstu", phoneNo = "0145678973", gender = "Female", dob = 957651600000, role = "User", point = 110, status = "Disabled"),
        User(username = "Brian Wilson", email = "brian@gmail.com", password = "passwordvwx", phoneNo = "0156789234", gender = "Male", dob = 1012665600000, role = "User", point = 130, status = "Active"),
        User(username = "Jessica Brown", email = "jessica@gmail.com", password = "passwordxyz", phoneNo = "0167814345", gender = "Female", dob = 992851200000, role = "User", point = 160, status = "Active"),
        User(username = "Daniel Taylor", email = "daniel@gmail.com", password = "password123", phoneNo = "0178901139", gender = "Male", dob = 986787600000, role = "User", point = 240, status = "Active"),
        User(username = "Emma Thomas", email = "emma@gmail.com", password = "password456", phoneNo = "0191234567", gender = "Female", dob = 1014950400000, role = "User", point = 70, status = "Disabled"),
        User(username = "William Harris", email = "william@gmail.com", password = "password789", phoneNo = "0195345678", gender = "Male", dob = 982972800000, role = "User", point = 110, status = "Active"),
        User(username = "Olivia Martinez", email = "olivia@gmail.com", password = "passwordabc", phoneNo = "0123455689", gender = "Female", dob = 971121600000, role = "User", point = 130, status = "Active"),
        User(username = "Alexander Young", email = "alexander@gmail.com", password = "passworddef", phoneNo = "0133567894", gender = "Male", dob = 1021996800000, role = "User", point = 200, status = "Active"),
        User(username = "Sophia Walker", email = "sophia@gmail.com", password = "passwordghi", phoneNo = "0123456711", gender = "Female", dob = 1003612800000, role = "User", point = 90, status = "Active"),
        User(username = "James King", email = "james@gmail.com", password = "passwordjkl", phoneNo = "0134567892", gender = "Male", dob = 993465600000, role = "User", point = 150, status = "Active"),
        User(username = "Charlotte Scott", email = "charlotte@gmail.com", password = "passwordmno", phoneNo = "0145678903", gender = "Female", dob = 983404800000, role = "User", point = 120, status = "Disabled"),
        User(username = "Benjamin Allen", email = "benjamin@gmail.com", password = "passwordpqr", phoneNo = "0156788214", gender = "Male", dob = 1015801600000, role = "User", point = 220, status = "Active"),
        User(username = "Ella Garcia", email = "ella@gmail.com", password = "passwordstu", phoneNo = "0167890300", gender = "Female", dob = 987523200000, role = "User", point = 140, status = "Active"),
        User(username = "Noah Martinez", email = "noah@gmail.com", password = "passwordvwx", phoneNo = "0178923996", gender = "Male", dob = 1001164800000, role = "User", point = 230, status = "Active"),
        User(username = "Mia Lopez", email = "mia@gmail.com", password = "password123", phoneNo = "0189218567", gender = "Female", dob = 983088000000, role = "User", point = 100, status = "Disabled"),
        User(username = "Liam Gonzalez", email = "liam@gmail.com", password = "password456", phoneNo = "0190175628", gender = "Male", dob = 992851200000, role = "User", point = 120, status = "Active"),
        User(username = "Avery Hernandez", email = "avery@gmail.com", password = "password789", phoneNo = "0138536789", gender = "Female", dob = 972172800000, role = "User", point = 110, status = "Active"),
        User(username = "Ethan Perez", email = "ethan@gmail.com", password = "passwordabc", phoneNo = "01234567590", gender = "Male", dob = 1013539200000, role = "User", point = 210, status = "Active"),
        User(username = "Isabella Sanchez", email = "isabella@gmail.com", password = "passworddef", phoneNo = "0123456336", gender = "Female", dob = 981916800000, role = "User", point = 80, status = "Active"),
        User(username = "Lucas Ramirez", email = "lucas@gmail.com", password = "passwordghi", phoneNo = "0134563612", gender = "Male", dob = 995068800000, role = "User", point = 130, status = "Active"),
        User(username = "Scarlett Torres", email = "scarlett@gmail.com", password = "passwordjkl", phoneNo = "0145694423", gender = "Female", dob = 1021142400000, role = "User", point = 150, status = "Disabled"),
        User(username = "Jackson Flores", email = "jackson@gmail.com", password = "passwordmno", phoneNo = "0156729234", gender = "Male", dob = 993907200000, role = "User", point = 240, status = "Active"),
        User(username = "Madison Gomez", email = "madison@gmail.com", password = "passwordpqr", phoneNo = "0112778908", gender = "Female", dob = 1007030400000, role = "User", point = 160, status = "Active"),
        User(username = "Aiden Reyes", email = "aiden@gmail.com", password = "passwordstu", phoneNo = "0173341278", gender = "Male", dob = 9906624000000, role = "User", point = 220, status = "Active"),
        User(username = "Chloe Hernandez", email = "chloe@gmail.com", password = "passwordvwx", phoneNo = "0125543478", gender = "Female", dob = 981100800000, role = "User", point = 90, status = "Disabled"),
        User(username = "Mason Nunez", email = "mason@gmail.com", password = "password123", phoneNo = "0176669090", gender = "Male", dob = 987177600000, role = "User", point = 110, status = "Active"),
        User(username = "Evelyn Alvarez", email = "evelyn@gmail.com", password = "password456", phoneNo = "0122221890", gender = "Female", dob = 1023830400000, role = "User", point = 130, status = "Active"),
        User(username = "Logan Jimenez", email = "logan@gmail.com", password = "password789", phoneNo = "0180314613", gender = "Male", dob = 998390400000, role = "User", point = 210, status = "Active"),
        User(username = "Grace Gutierrez", email = "grace@gmail.com", password = "passwordabc", phoneNo = "0196667023", gender = "Female", dob = 986217600000, role = "User", point = 80, status = "Active"),
        User(username = "Elijah Castillo", email = "elijah@gmail.com", password = "passworddef", phoneNo = "0132215287", gender = "Male", dob = 1015052800000, role = "User", point = 140, status = "Active"),
        User(username = "Aria Gonzalez", email = "aria@gmail.com", password = "passwordghi", phoneNo = "0153336750", gender = "Female", dob = 990748800000, role = "User", point = 150, status = "Disabled"),
        User(username = "Oliver Perez", email = "oliver@gmail.com", password = "passwordjkl", phoneNo = "0112315567", gender = "Male", dob = 1006185600000, role = "User", point = 230, status = "Active"),

//        User(username = "Anson", email = "anson@gmail.com", password = "imanson", phoneNo = "01559875412", gender = "Male", dob = 1072915200000, image = "anson.jpg", role = "Staff", point = 0, status = "Active"),
//        User(username = "John", email = "john@gmail.com", password = "john12345", phoneNo = "01524365443", gender = "Male", dob = 1072915200000, image = "john.jpg", role = "User", point = 700, status = "Active"),
//        User(username = "Ryan Moey Kai Xiang", email = "ryan@gmail.com", password = "ryanm0525", phoneNo = "0123456789", gender = "Male", dob = 1085443200000, image = "ryan.jpg", role = "User", point = 423, status = "Active"),
//        User(username = "Yong Jia Ying", email = "jiaying@gmail.com", password = "yjy12345", phoneNo = "0137652345", gender = "Female", dob = 1080864000000, image = "jy.jpg", role = "User", point = 210, status = "Active"),
//        User(username = "Kong Weng Cheng", email = "kongwc@gmail.com", password = "kwc12345", phoneNo = "0147653321", gender = "Male", dob = 1073952000000, image = "wc.jpg", role = "User", point = 360, status = "Active"),
//        User(username = "Yoong Hong Sheng", email = "yhsheng@gmail.com", password = "yhs12345", phoneNo = "0117593341", gender = "Male", dob = 1072137600000, image = "hs.jpg", role = "User", point = 560, status = "Active"),
//        User(username = "Siow Ying Long", email = "yinglong@gmail.com", password = "syl2345", phoneNo = "0198654321", gender = "Male", dob = 978307200000, image = "yl.jpg", role = "User", point = 150, status = "Active"),
//        User(username = "Willis Ong Wei Chen", email = "weichen@gmail.com", password = "wcl2345", phoneNo = "0187654320", gender = "Male", dob = 946684800000, image = "owc.jpg", role = "User", point = 670, status = "Active"),
//        User(username = "Yow Yee Qin", email = "yeeqin@gmail.com", password = "yql2345", phoneNo = "0137638790", gender = "Male", dob = 982857600000, image = "yq.jpg", role = "User", point = 170, status = "Active"),
//        User(username = "Ang Yong Tat", email = "yongtat@gmail.com", password = "ytl2345", phoneNo = "0147120791", gender = "Male", dob = 1085155200000, image = "yt.jpg", role = "User", point = 390, status = "Active"),
//        User(username = "Alden Ling Li Xuan", email = "aldenling@gmail.com", password = "aldenl2345", phoneNo = "0137167561", gender = "Male", dob = 1089561600000, image = "alden.jpg", role = "User", point = 210, status = "Active"),
//        User(username = "Edison", email = "edison@gmail.com", password = "edisonl2345", phoneNo = "0142333771", gender = "Male", dob = 1093968000000, image = "edison.jpg", role = "User", point = 190, status = "Active"),
//        User(username = "Jane Smith", email = "jane@gmail.com", password = "password456", phoneNo = "0198765432", gender = "Female", dob = 978307200000, image = "jane.jpg", role = "User", point = 150, status = "Active"),
//        User(username = "Mark Jackson", email = "mark@gmail.com", password = "password789", phoneNo = "0198765431", gender = "Male", dob = 946684800000, image = "mark.jpg", role = "User", point = 200, status = "Active"),
//        User(username = "Sara Williams", email = "sara@gmail.com", password = "passwordabc", phoneNo = "0128856789", gender = "Female", dob = 1041379200000, image = "sara.jpg", role = "User", point = 80, status = "Disabled"),
//        User(username = "Chris Brown", email = "chris@gmail.com", password = "passworddef", phoneNo = "0167890345", gender = "Male", dob = 924076800000, image = "chris.jpg", role = "User", point = 120, status = "Active"),
//        User(username = "Emily Johnson", email = "emily@gmail.com", password = "passwordghi", phoneNo = "0154321876", gender = "Female", dob = 1035465600000, image = "emily.jpg", role = "User", point = 180, status = "Active"),
//        User(username = "Michael Clark", email = "michael@gmail.com", password = "passwordjkl", phoneNo = "0189034567", gender = "Male", dob = 955177600000, image = "michael.jpg", role = "User", point = 90, status = "Active"),
//        User(username = "Amanda Lee", email = "amanda@gmail.com", password = "passwordmno", phoneNo = "0123456781", gender = "Female", dob = 1009372800000, image = "amanda.jpg", role = "User", point = 140, status = "Active"),
//        User(username = "David Moore", email = "david@gmail.com", password = "passwordpqr", phoneNo = "0134567812", gender = "Male", dob = 1001750400000, image = "david.jpg", role = "User", point = 220, status = "Active"),
//        User(username = "Lisa Anderson", email = "lisa@gmail.com", password = "passwordstu", phoneNo = "0145678973", gender = "Female", dob = 957651600000, image = "lisa.jpg", role = "User", point = 110, status = "Disabled"),
//        User(username = "Brian Wilson", email = "brian@gmail.com", password = "passwordvwx", phoneNo = "0156789234", gender = "Male", dob = 1012665600000, image = "brian.jpg", role = "User", point = 130, status = "Active"),
//        User(username = "Jessica Brown", email = "jessica@gmail.com", password = "passwordxyz", phoneNo = "0167814345", gender = "Female", dob = 992851200000, image = "jessica.jpg", role = "User", point = 160, status = "Active"),
//        User(username = "Daniel Taylor", email = "daniel@gmail.com", password = "password123", phoneNo = "0178901139", gender = "Male", dob = 986787600000, image = "daniel.jpg", role = "User", point = 240, status = "Active"),
//        User(username = "Emma Thomas", email = "emma@gmail.com", password = "password456", phoneNo = "0191234567", gender = "Female", dob = 1014950400000, image = "emma.jpg", role = "User", point = 70, status = "Disabled"),
//        User(username = "William Harris", email = "william@gmail.com", password = "password789", phoneNo = "0195345678", gender = "Male", dob = 982972800000, image = "william.jpg", role = "User", point = 110, status = "Active"),
//        User(username = "Olivia Martinez", email = "olivia@gmail.com", password = "passwordabc", phoneNo = "0123455689", gender = "Female", dob = 971121600000, image = "olivia.jpg", role = "User", point = 130, status = "Active"),
//        User(username = "Alexander Young", email = "alexander@gmail.com", password = "passworddef", phoneNo = "0133567894", gender = "Male", dob = 1021996800000, image = "alexander.jpg", role = "User", point = 200, status = "Active"),
//        User(username = "Sophia Walker", email = "sophia@gmail.com", password = "passwordghi", phoneNo = "0123456711", gender = "Female", dob = 1003612800000, image = "sophia.jpg", role = "User", point = 90, status = "Active"),
//        User(username = "James King", email = "james@gmail.com", password = "passwordjkl", phoneNo = "0134567892", gender = "Male", dob = 993465600000, image = "james.jpg", role = "User", point = 150, status = "Active"),
//        User(username = "Charlotte Scott", email = "charlotte@gmail.com", password = "passwordmno", phoneNo = "0145678903", gender = "Female", dob = 983404800000, image = "charlotte.jpg", role = "User", point = 120, status = "Disabled"),
//        User(username = "Benjamin Allen", email = "benjamin@gmail.com", password = "passwordpqr", phoneNo = "0156788214", gender = "Male", dob = 1015801600000, image = "benjamin.jpg", role = "User", point = 220, status = "Active"),
//        User(username = "Ella Garcia", email = "ella@gmail.com", password = "passwordstu", phoneNo = "0167890300", gender = "Female", dob = 987523200000, image = "ella.jpg", role = "User", point = 140, status = "Active"),
//        User(username = "Noah Martinez", email = "noah@gmail.com", password = "passwordvwx", phoneNo = "0178923996", gender = "Male", dob = 1001164800000, image = "noah.jpg", role = "User", point = 230, status = "Active"),
//        User(username = "Mia Lopez", email = "mia@gmail.com", password = "password123", phoneNo = "0189218567", gender = "Female", dob = 983088000000, image = "mia.jpg", role = "User", point = 100, status = "Disabled"),
//        User(username = "Liam Gonzalez", email = "liam@gmail.com", password = "password456", phoneNo = "0190175628", gender = "Male", dob = 992851200000, image = "liam.jpg", role = "User", point = 120, status = "Active"),
//        User(username = "Avery Hernandez", email = "avery@gmail.com", password = "password789", phoneNo = "0138536789", gender = "Female", dob = 972172800000, image = "avery.jpg", role = "User", point = 110, status = "Active"),
//        User(username = "Ethan Perez", email = "ethan@gmail.com", password = "passwordabc", phoneNo = "01234567590", gender = "Male", dob = 1013539200000, image = "ethan.jpg", role = "User", point = 210, status = "Active"),
//        User(username = "Isabella Sanchez", email = "isabella@gmail.com", password = "passworddef", phoneNo = "0123456336", gender = "Female", dob = 981916800000, image = "isabella.jpg", role = "User", point = 80, status = "Active"),
//        User(username = "Lucas Ramirez", email = "lucas@gmail.com", password = "passwordghi", phoneNo = "0134563612", gender = "Male", dob = 995068800000, image = "lucas.jpg", role = "User", point = 130, status = "Active"),
//        User(username = "Scarlett Torres", email = "scarlett@gmail.com", password = "passwordjkl", phoneNo = "0145694423", gender = "Female", dob = 1021142400000, image = "scarlett.jpg", role = "User", point = 150, status = "Disabled"),
//        User(username = "Jackson Flores", email = "jackson@gmail.com", password = "passwordmno", phoneNo = "0156729234", gender = "Male", dob = 993907200000, image = "jackson.jpg", role = "User", point = 240, status = "Active"),
//        User(username = "Madison Gomez", email = "madison@gmail.com", password = "passwordpqr", phoneNo = "0112778908", gender = "Female", dob = 1007030400000, image = "madison.jpg", role = "User", point = 160, status = "Active"),
//        User(username = "Aiden Reyes", email = "aiden@gmail.com", password = "passwordstu", phoneNo = "0173341278", gender = "Male", dob = 9906624000000, image = "aiden.jpg", role = "User", point = 220, status = "Active"),
//        User(username = "Chloe Hernandez", email = "chloe@gmail.com", password = "passwordvwx", phoneNo = "0125543478", gender = "Female", dob = 981100800000, image = "chloe.jpg", role = "User", point = 90, status = "Disabled"),
//        User(username = "Mason Nunez", email = "mason@gmail.com", password = "password123", phoneNo = "0176669090", gender = "Male", dob = 987177600000, image = "mason.jpg", role = "User", point = 110, status = "Active"),
//        User(username = "Evelyn Alvarez", email = "evelyn@gmail.com", password = "password456", phoneNo = "0122221890", gender = "Female", dob = 1023830400000, image = "evelyn.jpg", role = "User", point = 130, status = "Active"),
//        User(username = "Logan Jimenez", email = "logan@gmail.com", password = "password789", phoneNo = "0180314613", gender = "Male", dob = 998390400000, image = "logan.jpg", role = "User", point = 210, status = "Active"),
//        User(username = "Grace Gutierrez", email = "grace@gmail.com", password = "passwordabc", phoneNo = "0196667023", gender = "Female", dob = 986217600000, image = "grace.jpg", role = "User", point = 80, status = "Active"),
//        User(username = "Elijah Castillo", email = "elijah@gmail.com", password = "passworddef", phoneNo = "0132215287", gender = "Male", dob = 1015052800000, image = "elijah.jpg", role = "User", point = 140, status = "Active"),
//        User(username = "Aria Gonzalez", email = "aria@gmail.com", password = "passwordghi", phoneNo = "0153336750", gender = "Female", dob = 990748800000, image = "aria.jpg", role = "User", point = 150, status = "Disabled"),
//        User(username = "Oliver Perez", email = "oliver@gmail.com", password = "passwordjkl", phoneNo = "0112315567", gender = "Male", dob = 1006185600000, image = "oliver.jpg", role = "User", point = 230, status = "Active")
    )

    val waitlist = listOf(
        Waitlist(userID = 1, size = 2, datetime = 1714502724, status = "Queue"),
        Waitlist(userID = 2, size = 4, datetime = 1714502725, status = "Accepted"),
        Waitlist(userID = 3, size = 3, datetime = 1714502726, status = "Cancelled"),
        Waitlist(userID = 4, size = 5, datetime = 1714502727, status = "Queue"),
        Waitlist(userID = 5, size = 1, datetime = 1714502728, status = "Accepted"),
        Waitlist(userID = 6, size = 6, datetime = 1714502729, status = "Queue"),
        Waitlist(userID = 7, size = 8, datetime = 1714502730, status = "Cancelled"),
        Waitlist(userID = 8, size = 9, datetime = 1714502731, status = "Queue"),
        Waitlist(userID = 9, size = 10, datetime = 1714502732, status = "Accepted"),
        Waitlist(userID = 10, size = 7, datetime = 1714502733, status = "Queue"),
        Waitlist(userID = 11, size = 2, datetime = 1714502734, status = "Accepted"),
        Waitlist(userID = 12, size = 4, datetime = 1714502735, status = "Queue"),
        Waitlist(userID = 13, size = 3, datetime = 1714502736, status = "Cancelled"),
        Waitlist(userID = 14, size = 5, datetime = 1714502737, status = "Queue"),
        Waitlist(userID = 15, size = 1, datetime = 1714502738, status = "Accepted"),
        Waitlist(userID = 16, size = 6, datetime = 1714502739, status = "Queue"),
        Waitlist(userID = 17, size = 8, datetime = 1714502740, status = "Cancelled"),
        Waitlist(userID = 18, size = 9, datetime = 1714502741, status = "Queue"),
        Waitlist(userID = 19, size = 10, datetime = 1714502742, status = "Accepted"),
        Waitlist(userID = 20, size = 7, datetime = 1714502743, status = "Queue"),
        Waitlist(userID = 21, size = 2, datetime = 1714502744, status = "Accepted"),
        Waitlist(userID = 22, size = 4, datetime = 1714502745, status = "Queue"),
        Waitlist(userID = 23, size = 3, datetime = 1714502746, status = "Cancelled"),
        Waitlist(userID = 24, size = 5, datetime = 1714502747, status = "Queue"),
        Waitlist(userID = 25, size = 1, datetime = 1714502748, status = "Accepted"),
        Waitlist(userID = 26, size = 6, datetime = 1714502749, status = "Queue"),
        Waitlist(userID = 27, size = 8, datetime = 1714502750, status = "Cancelled"),
        Waitlist(userID = 28, size = 9, datetime = 1714502751, status = "Queue"),
        Waitlist(userID = 29, size = 10, datetime = 1714502752, status = "Accepted"),
        Waitlist(userID = 30, size = 7, datetime = 1714502753, status = "Queue"),
        Waitlist(userID = 31, size = 2, datetime = 1714502754, status = "Accepted"),
        Waitlist(userID = 32, size = 4, datetime = 1714502755, status = "Queue"),
        Waitlist(userID = 33, size = 3, datetime = 1714502756, status = "Cancelled"),
        Waitlist(userID = 34, size = 5, datetime = 1714502757, status = "Queue"),
        Waitlist(userID = 35, size = 1, datetime = 1714502758, status = "Accepted"),
        Waitlist(userID = 36, size = 6, datetime = 1714502759, status = "Queue"),
        Waitlist(userID = 37, size = 8, datetime = 1714502760, status = "Cancelled"),
        Waitlist(userID = 38, size = 9, datetime = 1714502761, status = "Queue"),
        Waitlist(userID = 39, size = 10, datetime = 1714502762, status = "Accepted"),
        Waitlist(userID = 40, size = 7, datetime = 1714502763, status = "Queue"),
        Waitlist(userID = 41, size = 2, datetime = 1714502764, status = "Accepted"),
        Waitlist(userID = 42, size = 4, datetime = 1714502765, status = "Queue"),
        Waitlist(userID = 43, size = 3, datetime = 1714502766, status = "Cancelled"),
        Waitlist(userID = 44, size = 5, datetime = 1714502767, status = "Queue"),
        Waitlist(userID = 45, size = 1, datetime = 1714502768, status = "Accepted"),
        Waitlist(userID = 46, size = 6, datetime = 1714502769, status = "Queue"),
        Waitlist(userID = 47, size = 8, datetime = 1714502770, status = "Cancelled"),
        Waitlist(userID = 48, size = 9, datetime = 1714502771, status = "Queue"),
        Waitlist(userID = 49, size = 10, datetime = 1714502772, status = "Accepted"),
        Waitlist(userID = 50, size = 7, datetime = 1714502773, status = "Queue")
    )

    val feedbackList = listOf(
        Feedback(userID = 1, star = 4, category = "Packaging", comments = "The packaging was very neat and secure."),
        Feedback(userID = 2, star = 5, category = "Menu", comments = "The menu options were extensive and delicious."),
        Feedback(userID = 3, star = 3, category = "Delivery", comments = "The delivery was delayed, but the food arrived warm."),
        Feedback(userID = 4, star = 2, category = "App", comments = "The app kept crashing during order placement."),
        Feedback(userID = 5, star = 4, category = "Environment", comments = "The restaurant ambiance was cozy and inviting."),
        Feedback(userID = 6, star = 5, category = "Other", comments = "Excellent customer service!"),
        Feedback(userID = 7, star = 3, category = "Packaging", comments = "The food containers were slightly damaged upon arrival."),
        Feedback(userID = 8, star = 4, category = "Menu", comments = "The menu had a good variety of options for vegetarians."),
        Feedback(userID = 9, star = 2, category = "Delivery", comments = "The delivery person was rude and unprofessional."),
        Feedback(userID = 10, star = 5, category = "App", comments = "The app interface was user-friendly and intuitive."),
        Feedback(userID = 11, star = 3, category = "Environment", comments = "The restaurant was too noisy."),
        Feedback(userID = 12, star = 4, category = "Other", comments = "The food tasted amazing!"),
        Feedback(userID = 13, star = 5, category = "Packaging", comments = "The packaging was eco-friendly and recyclable."),
        Feedback(userID = 14, star = 2, category = "Menu", comments = "The menu prices were too high for the portion sizes."),
        Feedback(userID = 15, star = 3, category = "Delivery", comments = "The delivery was late, and the food was cold."),
        Feedback(userID = 16, star = 4, category = "App", comments = "The app offered great discounts and deals."),
        Feedback(userID = 17, star = 5, category = "Environment", comments = "The restaurant had a beautiful outdoor seating area."),
        Feedback(userID = 18, star = 3, category = "Other", comments = "Average experience overall."),
        Feedback(userID = 19, star = 4, category = "Packaging", comments = "The packaging was sturdy and well-sealed."),
        Feedback(userID = 20, star = 5, category = "Menu", comments = "The menu had unique and innovative dishes."),
        Feedback(userID = 21, star = 3, category = "Delivery", comments = "The delivery person forgot part of the order."),
        Feedback(userID = 22, star = 2, category = "App", comments = "The app crashed multiple times while browsing the menu."),
        Feedback(userID = 23, star = 4, category = "Environment", comments = "The restaurant was clean and well-maintained."),
        Feedback(userID = 24, star = 5, category = "Other", comments = "Impressive service!"),
        Feedback(userID = 25, star = 3, category = "Packaging", comments = "The packaging was excessive and not eco-friendly."),
        Feedback(userID = 26, star = 4, category = "Menu", comments = "The menu lacked options for those with dietary restrictions."),
        Feedback(userID = 27, star = 5, category = "Delivery", comments = "The delivery was prompt, and the food was piping hot."),
        Feedback(userID = 28, star = 2, category = "App", comments = "The app was slow and unresponsive."),
        Feedback(userID = 29, star = 4, category = "Environment", comments = "The restaurant had a cozy and inviting atmosphere."),
        Feedback(userID = 30, star = 5, category = "Other", comments = "Best dining experience!"),
        Feedback(userID = 31, star = 2, category = "Packaging", comments = "The packaging was poorly sealed."),
        Feedback(userID = 32, star = 3, category = "Menu", comments = "The menu lacked variety."),
        Feedback(userID = 33, star = 4, category = "Delivery", comments = "The delivery arrived on time."),
        Feedback(userID = 34, star = 5, category = "App", comments = "The app interface was user-friendly and intuitive."),
        Feedback(userID = 35, star = 2, category = "Environment", comments = "The restaurant was overcrowded."),
        Feedback(userID = 36, star = 3, category = "Other", comments = "Average dining experience."),
        Feedback(userID = 37, star = 4, category = "Packaging", comments = "The packaging was eco-friendly."),
        Feedback(userID = 38, star = 5, category = "Menu", comments = "The menu had a wide range of options."),
        Feedback(userID = 39, star = 2, category = "Delivery", comments = "The delivery was slow."),
        Feedback(userID = 40, star = 3, category = "App", comments = "The app crashed frequently."),
        Feedback(userID = 41, star = 4, category = "Environment", comments = "The restaurant had a pleasant ambiance."),
        Feedback(userID = 42, star = 5, category = "Other", comments = "Friendly staff and great food!"),
        Feedback(userID = 43, star = 2, category = "Packaging", comments = "The packaging was messy."),
        Feedback(userID = 44, star = 3, category = "Menu", comments = "Limited menu options."),
        Feedback(userID = 45, star = 4, category = "Delivery", comments = "The delivery was quick and efficient."),
        Feedback(userID = 46, star = 5, category = "App", comments = "The app had useful features."),
        Feedback(userID = 47, star = 2, category = "Environment", comments = "Poor restaurant lighting."),
        Feedback(userID = 48, star = 3, category = "Other", comments = "Decent food quality."),
        Feedback(userID = 49, star = 4, category = "Packaging", comments = "The packaging was secure and intact."),
        Feedback(userID = 50, star = 5, category = "Menu", comments = "Extensive menu options."),

//        Feedback(userID = 1, star = 4, category = "Packaging", images = "https://example.com/image1.jpg,https://example.com/image2.jpg", comments = "The packaging was very neat and secure."),
//        Feedback(userID = 2, star = 5, category = "Menu", images = "https://example.com/image3.jpg,https://example.com/image4.jpg", comments = "The menu options were extensive and delicious."),
//        Feedback(userID = 3, star = 3, category = "Delivery", images = "https://example.com/image5.jpg,https://example.com/image6.jpg", comments = "The delivery was delayed, but the food arrived warm."),
//        Feedback(userID = 4, star = 2, category = "App", images = "https://example.com/image7.jpg,https://example.com/image8.jpg", comments = "The app kept crashing during order placement."),
//        Feedback(userID = 5, star = 4, category = "Environment", images = "https://example.com/image9.jpg,https://example.com/image10.jpg", comments = "The restaurant ambiance was cozy and inviting."),
//        Feedback(userID = 6, star = 5, category = "Other", images = "https://example.com/image11.jpg,https://example.com/image12.jpg", comments = "Excellent customer service!"),
//        Feedback(userID = 7, star = 3, category = "Packaging", images = "https://example.com/image13.jpg,https://example.com/image14.jpg", comments = "The food containers were slightly damaged upon arrival."),
//        Feedback(userID = 8, star = 4, category = "Menu", images = "https://example.com/image15.jpg,https://example.com/image16.jpg", comments = "The menu had a good variety of options for vegetarians."),
//        Feedback(userID = 9, star = 2, category = "Delivery", images = "https://example.com/image17.jpg,https://example.com/image18.jpg", comments = "The delivery person was rude and unprofessional."),
//        Feedback(userID = 10, star = 5, category = "App", images = "https://example.com/image19.jpg,https://example.com/image20.jpg", comments = "The app interface was user-friendly and intuitive."),
//        Feedback(userID = 11, star = 3, category = "Environment", images = "https://example.com/image21.jpg,https://example.com/image22.jpg", comments = "The restaurant was too noisy."),
//        Feedback(userID = 12, star = 4, category = "Other", images = "https://example.com/image23.jpg,https://example.com/image24.jpg", comments = "The food tasted amazing!"),
//        Feedback(userID = 13, star = 5, category = "Packaging", images = "https://example.com/image25.jpg,https://example.com/image26.jpg", comments = "The packaging was eco-friendly and recyclable."),
//        Feedback(userID = 14, star = 2, category = "Menu", images = "https://example.com/image27.jpg,https://example.com/image28.jpg", comments = "The menu prices were too high for the portion sizes."),
//        Feedback(userID = 15, star = 3, category = "Delivery", images = "https://example.com/image29.jpg,https://example.com/image30.jpg", comments = "The delivery was late, and the food was cold."),
//        Feedback(userID = 16, star = 4, category = "App", images = "https://example.com/image31.jpg,https://example.com/image32.jpg", comments = "The app offered great discounts and deals."),
//        Feedback(userID = 17, star = 5, category = "Environment", images = "https://example.com/image33.jpg,https://example.com/image34.jpg", comments = "The restaurant had a beautiful outdoor seating area."),
//        Feedback(userID = 18, star = 3, category = "Other", images = "https://example.com/image35.jpg,https://example.com/image36.jpg", comments = "Average experience overall."),
//        Feedback(userID = 19, star = 4, category = "Packaging", images = "https://example.com/image37.jpg,https://example.com/image38.jpg", comments = "The packaging was sturdy and well-sealed."),
//        Feedback(userID = 20, star = 5, category = "Menu", images = "https://example.com/image39.jpg,https://example.com/image40.jpg", comments = "The menu had unique and innovative dishes."),
//        Feedback(userID = 21, star = 3, category = "Delivery", images = "https://example.com/image41.jpg,https://example.com/image42.jpg", comments = "The delivery person forgot part of the order."),
//        Feedback(userID = 22, star = 2, category = "App", images = "https://example.com/image43.jpg,https://example.com/image44.jpg", comments = "The app crashed multiple times while browsing the menu."),
//        Feedback(userID = 23, star = 4, category = "Environment", images = "https://example.com/image45.jpg,https://example.com/image46.jpg", comments = "The restaurant was clean and well-maintained."),
//        Feedback(userID = 24, star = 5, category = "Other", images = "https://example.com/image47.jpg,https://example.com/image48.jpg", comments = "Impressive service!"),
//        Feedback(userID = 25, star = 3, category = "Packaging", images = "https://example.com/image49.jpg,https://example.com/image50.jpg", comments = "The packaging was excessive and not eco-friendly."),
//        Feedback(userID = 26, star = 4, category = "Menu", images = "https://example.com/image51.jpg,https://example.com/image52.jpg", comments = "The menu lacked options for those with dietary restrictions."),
//        Feedback(userID = 27, star = 5, category = "Delivery", images = "https://example.com/image53.jpg,https://example.com/image54.jpg", comments = "The delivery was prompt, and the food was piping hot."),
//        Feedback(userID = 28, star = 2, category = "App", images = "https://example.com/image55.jpg,https://example.com/image56.jpg", comments = "The app was slow and unresponsive."),
//        Feedback(userID = 29, star = 4, category = "Environment", images = "https://example.com/image57.jpg,https://example.com/image58.jpg", comments = "The restaurant had a cozy and inviting atmosphere."),
//        Feedback(userID = 30, star = 5, category = "Other", images = "https://example.com/image59.jpg,https://example.com/image60.jpg", comments = "Best dining experience!"),
//        Feedback(userID = 31, star = 2, category = "Packaging", images = "https://example.com/image61.jpg,https://example.com/image62.jpg", comments = "The packaging was poorly sealed."),
//        Feedback(userID = 32, star = 3, category = "Menu", images = "https://example.com/image63.jpg,https://example.com/image64.jpg", comments = "The menu lacked variety."),
//        Feedback(userID = 33, star = 4, category = "Delivery", images = "https://example.com/image65.jpg,https://example.com/image66.jpg", comments = "The delivery arrived on time."),
//        Feedback(userID = 34, star = 5, category = "App", images = "https://example.com/image67.jpg,https://example.com/image68.jpg", comments = "The app interface was intuitive and easy to use."),
//        Feedback(userID = 35, star = 2, category = "Environment", images = "https://example.com/image69.jpg,https://example.com/image70.jpg", comments = "The restaurant was overcrowded."),
//        Feedback(userID = 36, star = 3, category = "Other", images = "https://example.com/image71.jpg,https://example.com/image72.jpg", comments = "Average dining experience."),
//        Feedback(userID = 37, star = 4, category = "Packaging", images = "https://example.com/image73.jpg,https://example.com/image74.jpg", comments = "The packaging was eco-friendly."),
//        Feedback(userID = 38, star = 5, category = "Menu", images = "https://example.com/image75.jpg,https://example.com/image76.jpg", comments = "The menu had a wide range of options."),
//        Feedback(userID = 39, star = 2, category = "Delivery", images = "https://example.com/image77.jpg,https://example.com/image78.jpg", comments = "The delivery was slow."),
//        Feedback(userID = 40, star = 3, category = "App", images = "https://example.com/image79.jpg,https://example.com/image80.jpg", comments = "The app crashed frequently."),
//        Feedback(userID = 41, star = 4, category = "Environment", images = "https://example.com/image81.jpg,https://example.com/image82.jpg", comments = "The restaurant had a pleasant ambiance."),
//        Feedback(userID = 42, star = 5, category = "Other", images = "https://example.com/image83.jpg,https://example.com/image84.jpg", comments = "Friendly staff and great food!"),
//        Feedback(userID = 43, star = 2, category = "Packaging", images = "https://example.com/image85.jpg,https://example.com/image86.jpg", comments = "The packaging was messy."),
//        Feedback(userID = 44, star = 3, category = "Menu", images = "https://example.com/image87.jpg,https://example.com/image88.jpg", comments = "Limited menu options."),
//        Feedback(userID = 45, star = 4, category = "Delivery", images = "https://example.com/image89.jpg,https://example.com/image90.jpg", comments = "The delivery was quick and efficient."),
//        Feedback(userID = 46, star = 5, category = "App", images = "https://example.com/image91.jpg,https://example.com/image92.jpg", comments = "The app had useful features."),
//        Feedback(userID = 47, star = 2, category = "Environment", images = "https://example.com/image93.jpg,https://example.com/image94.jpg", comments = "Poor restaurant lighting."),
//        Feedback(userID = 48, star = 3, category = "Other", images = "https://example.com/image95.jpg,https://example.com/image96.jpg", comments = "Decent food quality."),
//        Feedback(userID = 49, star = 4, category = "Packaging", images = "https://example.com/image97.jpg,https://example.com/image98.jpg", comments = "The packaging was secure and intact."),
//        Feedback(userID = 50, star = 5, category = "Menu", images = "https://example.com/image99.jpg,https://example.com/image100.jpg", comments = "Extensive menu options.")
    )

    val orderList = listOf(
        Order(userID = 1, method = "Takeaway", amount = 69.5, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 2, method = "Dine-in", amount = 34.5, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 3, method = "Delivery", amount = 82.5, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 4, method = "Takeaway", amount = 146.3, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 5, method = "Dine-in", amount = 28.5, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 6, method = "Delivery", amount = 58.3, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 7, method = "Takeaway", amount = 68.1, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 8, method = "Dine-in", amount = 48.6, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 9, method = "Delivery", amount = 64.5, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 10, method = "Takeaway", amount = 35.8, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 11, method = "Dine-in", amount = 99.1, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 12, method = "Delivery", amount = 74.4, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 13, method = "Takeaway", amount = 39.2, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 14, method = "Dine-in", amount = 37.0, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 15, method = "Delivery", amount = 20.8, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 16, method = "Takeaway", amount = 50.0, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 17, method = "Dine-in", amount = 37.8, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 18, method = "Delivery", amount = 128.7, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 19, method = "Takeaway", amount = 110.5, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 20, method = "Dine-in", amount = 15.0, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 21, method = "Delivery", amount = 29.1, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 22, method = "Takeaway", amount = 143.2, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 23, method = "Dine-in", amount = 62.8, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 24, method = "Delivery", amount = 37.5, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 25, method = "Takeaway", amount = 25.8, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 26, method = "Dine-in", amount = 8.80, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 27, method = "Delivery", amount = 8.80, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready"),
        Order(userID = 28, method = "Takeaway", amount = 8.80, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Preparing"),
        Order(userID = 29, method = "Dine-in", amount = 8.80, dateTime = 1620819600000, paymentStatus = "Unsuccessful", orderStatus = "Cancelled"),
        Order(userID = 30, method = "Delivery", amount = 8.80, dateTime = 1620819600000, paymentStatus = "Successful", orderStatus = "Ready")
    )

    val menuItemList = listOf(
        MenuItem(itemName = "Classic Cheeseburger", cuisine = "Western", price = 25.40, rating = 4.7, description = "Juicy beef patty topped with melted cheese, lettuce, onions, and pickles", status = "Active"),
        MenuItem(itemName = "California Roll", cuisine = "Japanese", price = 12.90, rating = 4.6, description = "Fresh crab, avocado, and cucumber wrapped in sushi rice and seaweed", status = "Active"),
        MenuItem(itemName = "Bibimbap", cuisine = "Korean", price = 18.70, rating = 4.8, description = "Traditional Korean rice dish topped with assorted vegetables, beef, and a fried egg", status = "Active"),
        MenuItem(itemName = "Nasi Lemak", cuisine = "Malaysian", price = 3.50, rating = 4.5, description = "Fragrant coconut rice served with spicy sambal, fried anchovies, peanuts, cucumber, and a boiled egg", status = "Active"),
        MenuItem(itemName = "Tom Yum Soup", cuisine = "Thai", price = 12.00, rating = 4.4, description = "Spicy and sour Thai soup with shrimp, lemongrass, lime leaves, and chili peppers", status = "Active"),
        MenuItem(itemName = "Latte", cuisine = "Beverage", price = 10.90, rating = 4.9, description = "Refreshing espresso mixed with chilled milk and beautiful foamed milk art", status = "Active"),
        MenuItem(itemName = "BBQ Ribs", cuisine = "Western", price = 35.80, rating = 4.8, description = "Tender pork ribs slow-cooked and glazed with tangy barbecue sauce", status = "Active"),
        MenuItem(itemName = "Sushi Platter", cuisine = "Japanese", price = 38.90, rating = 4.7, description = "Assortment of fresh nigiri and maki rolls served with soy sauce and wasabi", status = "Active"),
        MenuItem(itemName = "Kimchi Fried Rice", cuisine = "Korean", price = 14.50, rating = 4.6, description = "Savory fried rice cooked with spicy kimchi, pork, and vegetables", status = "Active"),
        MenuItem(itemName = "Satay", cuisine = "Malaysian", price = 6.90, rating = 4.5, description = "Skewered and grilled marinated meat served with peanut sauce", status = "Active"),
        MenuItem(itemName = "Mee Rebus", cuisine = "Malaysian", price = 8.50, rating = 4.7, description = "made with blanched yellow noodles drowned in an insanely addictive curry-like potato-based gravy and spices like lemongrass and ginger", status = "Active"),
        MenuItem(itemName = "Mango Sticky Rice", cuisine = "Thai", price = 8.80, rating = 4.6, description = "Sweet glutinous rice topped with ripe mango slices and coconut milk", status = "Active"),
        MenuItem(itemName = "Kimchi Ramen", cuisine = "Korean", price = 14.80, rating = 4.3, description = "Traditional fermented Korean side dish made with spicy pickled vegetables", status = "Active"),
        MenuItem(itemName = "Chicken Katsu", cuisine = "Japanese", price = 15.20, rating = 4.8, description = "Crispy breaded chicken cutlet served with tonkatsu sauce and steamed rice", status = "Active"),
        MenuItem(itemName = "Pineapple Fried Rice", cuisine = "Thai", price = 11.20, rating = 4.5, description = "Stir-fried rice with pineapple, shrimp, cashews, and vegetables, served in a pineapple shell", status = "Active"),
        MenuItem(itemName = "Green Curry", cuisine = "Thai", price = 12.90, rating = 4.7, description = "Creamy coconut milk-based curry with chicken, eggplant, and Thai basil", status = "Active"),
        MenuItem(itemName = "Prawn Mee", cuisine = "Malaysian", price = 9.00, rating = 4.6, description = "Thick yellow noodles fried in a rich prawn and pork stock and served with chilli", status = "Disabled"),
        MenuItem(itemName = "Asam Laksa", cuisine = "Malaysian", price = 10.50, rating = 4.8, description = "Peranakan noodle dish that comes with a sour fish and tamarind-based broth", status = "Active"),
        MenuItem(itemName = "Bak Kut Teh", cuisine = "Malaysian", price = 17.70, rating = 4.5, description = "pork ribs stewed with a mixture of fragrant herbs and spices such as garlic, cloves, cinnamon, star anise, fennel seeds and coriander", status = "Active"),
        MenuItem(itemName = "Bubble Tea", cuisine = "Beverage", price = 8.50, rating = 4.6, description = "Sweet and refreshing tea-based drink with chewy tapioca pearls", status = "Active"),
        MenuItem(itemName = "Spaghetti Aglio Olio", cuisine = "Western", price = 16.70, rating = 4.9, description = "cooked pasta tossed in garlic, olive oil, and pasta water", status = "Active"),
        MenuItem(itemName = "Tempura Platter", cuisine = "Japanese", price = 21.90, rating = 4.7, description = "Lightly battered and deep-fried seafood and vegetables served with dipping sauce", status = "Disabled"),
        MenuItem(itemName = "Bulgogi", cuisine = "Korean", price = 45.50, rating = 4.8, description = "Marinated and grilled thinly sliced beef served with rice and kimchi", status = "Active"),
        MenuItem(itemName = "Roti Canai", cuisine = "Malaysian", price = 3.00, rating = 4.6, description = "Flaky and crispy Malaysian flatbread served with curry dipping sauce", status = "Deleted"),
        MenuItem(itemName = "Green Papaya Salad", cuisine = "Thai", price = 8.10, rating = 4.5, description = "Shredded green papaya mixed with tomatoes, peanuts, and chili peppers in a tangy dressing", status = "Disabled"),
        MenuItem(itemName = "Lemon Tea", cuisine = "Beverage", price = 3.80, rating = 4.7, description = "combines black tea, fresh lemon juice, and sugar to make a bold and refreshing drink", status = "Active"),
        MenuItem(itemName = "Teh Tarik", cuisine = "Beverage", price = 3.50, rating = 4.6, description = "Black tea, sugar and condensed milk are combined and poured through the air between two cups until a rich frothy top is created", status = "Active"),
        MenuItem(itemName = "Chawanmushi", cuisine = "Japanese", price = 4.80, rating = 4.8, description = "Classic Japanese savory egg custard that is steamed in a delicate cup with prawn, chicken and jingo", status = "Active"),
        MenuItem(itemName = "Bibim Naengmyeon", cuisine = "Korean", price = 13.60, rating = 4.7, description = "Chilled buckwheat noodles mixed with spicy sauce, vegetables, and a boiled egg", status = "Deleted"),
        MenuItem(itemName = "Air Bandung", cuisine = "Beverage", price = 5.90, rating = 4.6, description = "Evaporated milk or condensed milk mixed with rose syrup", status = "Deleted"),

//        MenuItem(itemName = "Classic Cheeseburger", cuisine = "Western", price = 25.40, rating = 4.7, image = "classic_cheeseburger.jpg", description = "Juicy beef patty topped with melted cheese, lettuce, onions, and pickles", status = "Active"),
//        MenuItem(itemName = "California Roll", cuisine = "Japanese", price = 12.90, rating = 4.6, image = "california_roll.jpg", description = "Fresh crab, avocado, and cucumber wrapped in sushi rice and seaweed", status = "Active"),
//        MenuItem(itemName = "Bibimbap", cuisine = "Korean", price = 18.70, rating = 4.8, image = "bibimbap.jpg", description = "Traditional Korean rice dish topped with assorted vegetables, beef, and a fried egg", status = "Active"),
//        MenuItem(itemName = "Nasi Lemak", cuisine = "Malaysian", price = 3.50, rating = 4.5, image = "nasi_lemak.jpg", description = "Fragrant coconut rice served with spicy sambal, fried anchovies, peanuts, cucumber, and a boiled egg", status = "Active"),
//        MenuItem(itemName = "Tom Yum Soup", cuisine = "Thai", price = 12.00, rating = 4.4, image = "tom_yum_soup.jpg", description = "Spicy and sour Thai soup with shrimp, lemongrass, lime leaves, and chili peppers", status = "Active"),
//        MenuItem(itemName = "Latte", cuisine = "Beverage", price = 10.90, rating = 4.9, image = "latte.jpg", description = "Refreshing espresso mixed with chilled milk and beautiful foamed milk art", status = "Active"),
//        MenuItem(itemName = "BBQ Ribs", cuisine = "Western", price = 35.80, rating = 4.8, image = "bbq_ribs.jpg", description = "Tender pork ribs slow-cooked and glazed with tangy barbecue sauce", status = "Active"),
//        MenuItem(itemName = "Sushi Platter", cuisine = "Japanese", price = 38.90, rating = 4.7, image = "sushi_platter.jpg", description = "Assortment of fresh nigiri and maki rolls served with soy sauce and wasabi", status = "Active"),
//        MenuItem(itemName = "Kimchi Fried Rice", cuisine = "Korean", price = 14.50, rating = 4.6, image = "kimchi_fried_rice.jpg", description = "Savory fried rice cooked with spicy kimchi, pork, and vegetables", status = "Active"),
//        MenuItem(itemName = "Satay", cuisine = "Malaysian", price = 6.90, rating = 4.5, image = "satay.jpg", description = "Skewered and grilled marinated meat served with peanut sauce", status = "Active"),
//        MenuItem(itemName = "Mee Rebus", cuisine = "Malaysian", price = 8.50, rating = 4.7, image = "mee_rebus.jpg", description = "made with blanched yellow noodles drowned in an insanely addictive curry-like potato-based gravy and spices like lemongrass and ginger", status = "Active"),
//        MenuItem(itemName = "Mango Sticky Rice", cuisine = "Thai", price = 8.80, rating = 4.6, image = "mango_sticky_rice.jpg", description = "Sweet glutinous rice topped with ripe mango slices and coconut milk", status = "Active"),
//        MenuItem(itemName = "Kimchi Ramen", cuisine = "Korean", price = 14.80, rating = 4.3, image = "kimchi_ramen.jpg", description = "Traditional fermented Korean side dish made with spicy pickled vegetables", status = "Active"),
//        MenuItem(itemName = "Chicken Katsu", cuisine = "Japanese", price = 15.20, rating = 4.8, image = "chicken_katsu.jpg", description = "Crispy breaded chicken cutlet served with tonkatsu sauce and steamed rice", status = "Active"),
//        MenuItem(itemName = "Pineapple Fried Rice", cuisine = "Thai", price = 11.20, rating = 4.5, image = "pineapple_fried_rice.jpg", description = "Stir-fried rice with pineapple, shrimp, cashews, and vegetables, served in a pineapple shell", status = "Active"),
//        MenuItem(itemName = "Green Curry", cuisine = "Thai", price = 12.90, rating = 4.7, image = "green_curry.jpg", description = "Creamy coconut milk-based curry with chicken, eggplant, and Thai basil", status = "Active"),
//        MenuItem(itemName = "Prawn Mee", cuisine = "Malaysian", price = 9.00, rating = 4.6, image = "prawn_mee.jpg", description = "Thick yellow noodles fried in a rich prawn and pork stock and served with chilli", status = "Disabled"),
//        MenuItem(itemName = "Asam Laksa", cuisine = "Malaysian", price = 10.50, rating = 4.8, image = "asam_laksa.jpg", description = "Peranakan noodle dish that comes with a sour fish and tamarind-based broth", status = "Active"),
//        MenuItem(itemName = "Bak Kut Teh", cuisine = "Malaysian", price = 17.70, rating = 4.5, image = "bak_kut_teh.jpg", description = "pork ribs stewed with a mixture of fragrant herbs and spices such as garlic, cloves, cinnamon, star anise, fennel seeds and coriander", status = "Active"),
//        MenuItem(itemName = "Bubble Tea", cuisine = "Beverage", price = 8.50, rating = 4.6, image = "bubble_tea.jpg", description = "Sweet and refreshing tea-based drink with chewy tapioca pearls", status = "Active"),
//        MenuItem(itemName = "Spaghetti Aglio Olio", cuisine = "Western", price = 16.70, rating = 4.9, image = "spaghetti_aglio_olio.jpg", description = "cooked pasta tossed in garlic, olive oil, and pasta water", status = "Active"),
//        MenuItem(itemName = "Tempura Platter", cuisine = "Japanese", price = 21.90, rating = 4.7, image = "tempura_platter.jpg", description = "Lightly battered and deep-fried seafood and vegetables served with dipping sauce", status = "Disabled"),
//        MenuItem(itemName = "Bulgogi", cuisine = "Korean", price = 45.50, rating = 4.8, image = "bulgogi.jpg", description = "Marinated and grilled thinly sliced beef served with rice and kimchi", status = "Active"),
//        MenuItem(itemName = "Roti Canai", cuisine = "Malaysian", price = 3.00, rating = 4.6, image = "roti_canai.jpg", description = "Flaky and crispy Malaysian flatbread served with curry dipping sauce", status = "Deleted"),
//        MenuItem(itemName = "Green Papaya Salad", cuisine = "Thai", price = 8.10, rating = 4.5, image = "green_papaya_salad.jpg", description = "Shredded green papaya mixed with tomatoes, peanuts, and chili peppers in a tangy dressing", status = "Disabled"),
//        MenuItem(itemName = "Lemon Tea", cuisine = "Beverage", price = 3.80, rating = 4.7, image = "lemon_tea.jpg", description = "combines black tea, fresh lemon juice, and sugar to make a bold and refreshing drink", status = "Active"),
//        MenuItem(itemName = "Teh Tarik", cuisine = "Beverage", price = 3.50, rating = 4.6, image = "teh_tarik.jpg", description = "Black tea, sugar and condensed milk are combined and poured through the air between two cups until a rich frothy top is created", status = "Active"),
//        MenuItem(itemName = "Chawanmushi", cuisine = "Japanese", price = 4.80, rating = 4.8, image = "chawanmushi.jpg", description = "Classic Japanese savory egg custard that is steamed in a delicate cup with prawn, chicken and jingo", status = "Active"),
//        MenuItem(itemName = "Bibim Naengmyeon", cuisine = "Korean", price = 13.60, rating = 4.7, image = "bibim_naengmyeon.jpg", description = "Chilled buckwheat noodles mixed with spicy sauce, vegetables, and a boiled egg", status = "Deleted"),
//        MenuItem(itemName = "Air Bandung", cuisine = "Beverage", price = 5.90, rating = 4.6, image = "air_bandung.jpg", description = "Evaporated milk or condensed milk mixed with rose syrup", status = "Deleted")
    )

    val foodDetailsList = listOf(
        FoodDetails(menuItemID = 1, servingSize = 250.0, ingredient = "Beef patty, cheddar cheese, lettuce, tomato, onion, pickles, sesame seed bun"),
        FoodDetails(menuItemID = 2, servingSize = 210.0, ingredient = "Imitation crab, avocado, cucumber, sushi rice, seaweed, sesame seeds"),
        FoodDetails(menuItemID = 3, servingSize = 280.0, ingredient = "Rice, beef, fried egg, spinach, bean sprouts, carrot, shiitake mushrooms"),
        FoodDetails(menuItemID = 4, servingSize = 210.0, ingredient = "Coconut rice, spicy sambal, fried anchovies, peanuts, cucumber, boiled egg, dried shrimp"),
        FoodDetails(menuItemID = 5, servingSize = 300.0, ingredient = "Shrimp, lemongrass, lime leaves, chili peppers, mushrooms, tomatoes"),
        FoodDetails(menuItemID = 6, servingSize = 450.0, ingredient = "Espresso, milk, sugar syrup"),
        FoodDetails(menuItemID = 7, servingSize = 500.0, ingredient = "Pork ribs, barbecue sauce, coleslaw, cornbread"),
        FoodDetails(menuItemID = 8, servingSize = 410.0, ingredient = "Assorted nigiri (tuna, salmon, eel), maki rolls (California, spicy tuna), soy sauce, wasabi, pickled ginger"),
        FoodDetails(menuItemID = 9, servingSize = 280.0, ingredient = "Rice, kimchi, pork belly, scallions, carrots, peas"),
        FoodDetails(menuItemID = 10, servingSize = 50.0, ingredient = "Chicken, beef, lamb, peanut sauce, cucumber salad"),
        FoodDetails(menuItemID = 11, servingSize = 205.0, ingredient = "Yellow noodles, potato-based gravy, tofu, boiled egg, bean sprouts, fried shallots, lime wedges"),
        FoodDetails(menuItemID = 12, servingSize = 130.0, ingredient = "Glutinous rice, ripe mango slices, coconut milk, palm sugar, sesame seeds"),
        FoodDetails(menuItemID = 13, servingSize = 245.0, ingredient = "Napa cabbage, daikon radish, garlic, ginger, red chili flakes, fish sauce"),
        FoodDetails(menuItemID = 14, servingSize = 300.0, ingredient = "Chicken breast, panko breadcrumbs, cabbage, rice vinegar"),
        FoodDetails(menuItemID = 15, servingSize = 230.0, ingredient = "Jasmine rice, pineapple chunks, shrimp, cashews, peas, carrots"),
        FoodDetails(menuItemID = 16, servingSize = 350.0, ingredient = "Chicken thighs, eggplant, bell peppers, bamboo shoots, Thai basil leaves, Santan, Curry Powder"),
        FoodDetails(menuItemID = 17, servingSize = 210.0, ingredient = "Yellow noodles, prawns, hard-boiled egg, bean sprouts, kangkung, tofu puffs"),
        FoodDetails(menuItemID = 18, servingSize = 220.0, ingredient = "Mackerel, tamarind pulp, laksa leaves, cucumber, red chili, pineapple, mint leaves"),
        FoodDetails(menuItemID = 19, servingSize = 350.0, ingredient = "Pork ribs, garlic, star anise, cinnamon, cloves, white pepper"),
        FoodDetails(menuItemID = 20, servingSize = 320.0, ingredient = "Black tea, sugar, tapioca pearls, milk"),
        FoodDetails(menuItemID = 21, servingSize = 265.0, ingredient = "Spaghetti, garlic, olive oil, red pepper flakes, parsley"),
        FoodDetails(menuItemID = 22, servingSize = 390.0, ingredient = "Shrimp, zucchini, sweet potato, bell pepper, pumpkin, egg plant, lady finger, tempura batter, soy sauce, mirin"),
        FoodDetails(menuItemID = 23, servingSize = 530.0, ingredient = "Beef sirloin, soy sauce, sugar, garlic, sesame oil, scallions"),
        FoodDetails(menuItemID = 24, servingSize = 100.0, ingredient = "All-purpose flour, water, curry powder, turmeric powder, coconut milk"),
        FoodDetails(menuItemID = 25, servingSize = 150.0, ingredient = "Green papaya, tomatoes, peanuts, chili peppers, lime, palm sugar"),
        FoodDetails(menuItemID = 26, servingSize = 380.0, ingredient = "Black tea, lemon juice, sugar"),
        FoodDetails(menuItemID = 27, servingSize = 300.0, ingredient = "Black tea, sweetened condensed milk, ice cubes"),
        FoodDetails(menuItemID = 28, servingSize = 260.0, ingredient = "Eggs, dashi stock, soy sauce, mirin, shrimp, chicken, shiitake mushrooms"),
        FoodDetails(menuItemID = 29, servingSize = 350.0, ingredient = "Buckwheat noodles, spicy sauce, cucumber, radish sprouts, Korean pear, boiled egg"),
        FoodDetails(menuItemID = 30, servingSize = 230.0, ingredient = "Rose Syrup, Milk, Water")
    )


    val nutritionFactsList = listOf(
        NutritionFacts(foodDetailsID = 1, carbohydrates = 125.0, proteins = 50.0, fats = 50.0, salt = 2.5, sugar = 22.5),
        NutritionFacts(foodDetailsID = 2, carbohydrates = 105.0, proteins = 42.0, fats = 42.0, salt = 2.1, sugar = 18.9),
        NutritionFacts(foodDetailsID = 3, carbohydrates = 140.0, proteins = 56.0, fats = 56.0, salt = 2.8, sugar = 25.2),
        NutritionFacts(foodDetailsID = 4, carbohydrates = 105.0, proteins = 42.0, fats = 42.0, salt = 2.1, sugar = 18.9),
        NutritionFacts(foodDetailsID = 5, carbohydrates = 150.0, proteins = 60.0, fats = 60.0, salt = 3.0, sugar = 27.0),
        NutritionFacts(foodDetailsID = 4, carbohydrates = 105.0, proteins = 42.0, fats = 42.0, salt = 2.1, sugar = 18.9),
        NutritionFacts(foodDetailsID = 5, carbohydrates = 250.0, proteins = 100.0, fats = 100.0, salt = 5.0, sugar = 45.0),
        NutritionFacts(foodDetailsID = 6, carbohydrates = 225.0, proteins = 90.0, fats = 90.0, salt = 4.5, sugar = 40.5),
        NutritionFacts(foodDetailsID = 7, carbohydrates = 250.0, proteins = 100.0, fats = 100.0, salt = 5.0, sugar = 45.0),
        NutritionFacts(foodDetailsID = 8, carbohydrates = 205.0, proteins = 82.0, fats = 82.0, salt = 4.1, sugar = 36.9),
        NutritionFacts(foodDetailsID = 9, carbohydrates = 140.0, proteins = 56.0, fats = 56.0, salt = 2.8, sugar = 25.2),
        NutritionFacts(foodDetailsID = 10, carbohydrates = 25.0, proteins = 10.0, fats = 10.0, salt = 0.5, sugar = 4.5),
        NutritionFacts(foodDetailsID = 11, carbohydrates = 102.5, proteins = 41.0, fats = 41.0, salt = 2.1, sugar = 18.45),
        NutritionFacts(foodDetailsID = 12, carbohydrates = 65.0, proteins = 26.0, fats = 26.0, salt = 1.3, sugar = 11.7),
        NutritionFacts(foodDetailsID = 13, carbohydrates = 122.5, proteins = 49.0, fats = 49.0, salt = 2.5, sugar = 22.05),
        NutritionFacts(foodDetailsID = 14, carbohydrates = 150.0, proteins = 60.0, fats = 60.0, salt = 3.0, sugar = 27.0),
        NutritionFacts(foodDetailsID = 15, carbohydrates = 115.0, proteins = 46.0, fats = 46.0, salt = 2.3, sugar = 20.7),
        NutritionFacts(foodDetailsID = 16, carbohydrates = 175.0, proteins = 70.0, fats = 70.0, salt = 3.5, sugar = 31.5),
        NutritionFacts(foodDetailsID = 17, carbohydrates = 105.0, proteins = 42.0, fats = 42.0, salt = 2.1, sugar = 18.9),
        NutritionFacts(foodDetailsID = 18, carbohydrates = 110.0, proteins = 44.0, fats = 44.0, salt = 2.2, sugar = 19.8),
        NutritionFacts(foodDetailsID = 19, carbohydrates = 175.0, proteins = 70.0, fats = 70.0, salt = 3.5, sugar = 31.5),
        NutritionFacts(foodDetailsID = 20, carbohydrates = 160.0, proteins = 64.0, fats = 64.0, salt = 3.2, sugar = 28.8),
        NutritionFacts(foodDetailsID = 21, carbohydrates = 132.5, proteins = 53.0, fats = 53.0, salt = 2.7, sugar = 24.15),
        NutritionFacts(foodDetailsID = 22, carbohydrates = 195.0, proteins = 78.0, fats = 78.0, salt = 3.9, sugar = 35.1),
        NutritionFacts(foodDetailsID = 23, carbohydrates = 265.0, proteins = 106.0, fats = 106.0, salt = 5.3, sugar = 47.7),
        NutritionFacts(foodDetailsID = 24, carbohydrates = 50.0, proteins = 20.0, fats = 20.0, salt = 1.0, sugar = 9.0),
        NutritionFacts(foodDetailsID = 25, carbohydrates = 75.0, proteins = 30.0, fats = 30.0, salt = 1.5, sugar = 13.5),
        NutritionFacts(foodDetailsID = 26, carbohydrates = 190.0, proteins = 76.0, fats = 76.0, salt = 3.8, sugar = 34.2),
        NutritionFacts(foodDetailsID = 27, carbohydrates = 150.0, proteins = 60.0, fats = 60.0, salt = 3.0, sugar = 27.0),
        NutritionFacts(foodDetailsID = 28, carbohydrates = 130.0, proteins = 52.0, fats = 52.0, salt = 2.6, sugar = 23.4),
        NutritionFacts(foodDetailsID = 29, carbohydrates = 175.0, proteins = 70.0, fats = 70.0, salt = 3.5, sugar = 31.5),
        NutritionFacts(foodDetailsID = 30, carbohydrates = 115.0, proteins = 46.0, fats = 46.0, salt = 2.3, sugar = 20.7)
    )

    val orderDetailsList = listOf(
        OrderDetails(orderID = 1, menuItemID = 2, quantity = 2, remark = "No onions", option = "Large", total = 50.80, status = "Active"),
        OrderDetails(orderID = 1, menuItemID = 3, quantity = 1, remark = "Extra spicy", option = "Medium", total = 18.70, status = "Active"),
        OrderDetails(orderID = 2, menuItemID = 4, quantity = 3, remark = "No cucumber", option = "Small", total = 10.50, status = "Active"),
        OrderDetails(orderID = 2, menuItemID = 5, quantity = 2, remark = "Extra shrimp", option = "Medium", total = 24.00, status = "Active"),
        OrderDetails(orderID = 3, menuItemID = 6, quantity = 1, remark = "Less chili", option = "Cold", total = 10.90, status = "Active"),
        OrderDetails(orderID = 3, menuItemID = 7, quantity = 2, remark = "Extra sauce", option = "Hot", total = 71.60, status = "Active"),
        OrderDetails(orderID = 4, menuItemID = 8, quantity = 3, remark = "No onions", option = "Medium", total = 107.40, status = "Active"),
        OrderDetails(orderID = 4, menuItemID = 9, quantity = 1, remark = "Extra avocado", option = "Large", total = 38.90, status = "Active"),
        OrderDetails(orderID = 5, menuItemID = 10, quantity = 2, remark = "No peanuts", option = "Cold", total = 20.00, status = "Active"),
        OrderDetails(orderID = 5, menuItemID = 11, quantity = 1, remark = "Extra egg", option = "Hot", total = 8.50, status = "Active"),
        OrderDetails(orderID = 6, menuItemID = 12, quantity = 3, remark = "Less spicy", option = "Small", total = 43.50, status = "Active"),
        OrderDetails(orderID = 6, menuItemID = 13, quantity = 1, remark = "Extra rice", option = "Medium", total = 14.80, status = "Active"),
        OrderDetails(orderID = 7, menuItemID = 14, quantity = 2, remark = "No pork", option = "Large", total = 71.60, status = "Active"),
        OrderDetails(orderID = 7, menuItemID = 15, quantity = 1, remark = "Extra tofu", option = "Cold", total = 14.50, status = "Active"),
        OrderDetails(orderID = 8, menuItemID = 16, quantity = 3, remark = "No basil", option = "Small", total = 35.70, status = "Active"),
        OrderDetails(orderID = 8, menuItemID = 17, quantity = 1, remark = "Extra chicken", option = "Medium", total = 12.90, status = "Active"),
        OrderDetails(orderID = 9, menuItemID = 18, quantity = 2, remark = "No sambal", option = "Large", total = 60.00, status = "Active"),
        OrderDetails(orderID = 9, menuItemID = 19, quantity = 1, remark = "Extra anchovies", option = "Cold", total = 4.50, status = "Active"),
        OrderDetails(orderID = 10, menuItemID = 20, quantity = 3, remark = "Less lime", option = "Medium", total = 27.00, status = "Active"),
        OrderDetails(orderID = 10, menuItemID = 21, quantity = 1, remark = "Extra chili", option = "Hot", total = 8.80, status = "Active"),
        OrderDetails(orderID = 11, menuItemID = 22, quantity = 2, remark = "No pickles", option = "Large", total = 91.00, status = "Active"),
        OrderDetails(orderID = 11, menuItemID = 23, quantity = 1, remark = "Extra coconut milk", option = "Cold", total = 8.10, status = "Active"),
        OrderDetails(orderID = 12, menuItemID = 24, quantity = 3, remark = "Less pork", option = "Small", total = 60.90, status = "Active"),
        OrderDetails(orderID = 12, menuItemID = 25, quantity = 1, remark = "Extra noodles", option = "Medium", total = 13.50, status = "Active"),
        OrderDetails(orderID = 13, menuItemID = 26, quantity = 2, remark = "No kimchi", option = "Large", total = 29.60, status = "Active"),
        OrderDetails(orderID = 13, menuItemID = 27, quantity = 1, remark = "Extra vegetables", option = "Cold", total = 9.60, status = "Active"),
        OrderDetails(orderID = 14, menuItemID = 28, quantity = 3, remark = "No soy sauce", option = "Small", total = 25.80, status = "Active"),
        OrderDetails(orderID = 14, menuItemID = 29, quantity = 1, remark = "Extra wasabi", option = "Medium", total = 11.20, status = "Active"),
        OrderDetails(orderID = 15, menuItemID = 30, quantity = 2, remark = "Less shrimp", option = "Large", total = 10.80, status = "Active"),
        OrderDetails(orderID = 15, menuItemID = 1, quantity = 1, remark = "Extra rice noodles", option = "Cold", total = 10.00, status = "Active"),
        OrderDetails(orderID = 16, menuItemID = 2, quantity = 3, remark = "No lettuce", option = "Medium", total = 38.10, status = "Active"),
        OrderDetails(orderID = 16, menuItemID = 3, quantity = 1, remark = "Extra crab", option = "Hot", total = 12.90, status = "Active"),
        OrderDetails(orderID = 17, menuItemID = 4, quantity = 2, remark = "No avocado", option = "Large", total = 25.80, status = "Active"),
        OrderDetails(orderID = 17, menuItemID = 5, quantity = 1, remark = "Extra cucumber", option = "Cold", total = 12.00, status = "Active"),
        OrderDetails(orderID = 18, menuItemID = 6, quantity = 3, remark = "Less beef", option = "Small", total = 56.10, status = "Active"),
        OrderDetails(orderID = 18, menuItemID = 7, quantity = 1, remark = "Extra eggs", option = "Medium", total = 17.70, status = "Active"),
        OrderDetails(orderID = 19, menuItemID = 8, quantity = 2, remark = "No lettuce", option = "Large", total = 71.60, status = "Active"),
        OrderDetails(orderID = 19, menuItemID = 9, quantity = 1, remark = "Extra sauce", option = "Cold", total = 38.90, status = "Active"),
        OrderDetails(orderID = 20, menuItemID = 10, quantity = 3, remark = "No sambal", option = "Medium", total = 10.50, status = "Active"),
        OrderDetails(orderID = 20, menuItemID = 11, quantity = 1, remark = "Extra anchovies", option = "Hot", total = 4.50, status = "Active"),
        OrderDetails(orderID = 21, menuItemID = 12, quantity = 2, remark = "No lime leaves", option = "Large", total = 21.00, status = "Active"),
        OrderDetails(orderID = 21, menuItemID = 13, quantity = 1, remark = "Extra chili peppers", option = "Cold", total = 8.10, status = "Active"),
        OrderDetails(orderID = 22, menuItemID = 14, quantity = 3, remark = "Less barbecue sauce", option = "Small", total = 107.40, status = "Active"),
        OrderDetails(orderID = 22, menuItemID = 15, quantity = 1, remark = "Extra ribs", option = "Medium", total = 35.80, status = "Active"),
        OrderDetails(orderID = 23, menuItemID = 16, quantity = 2, remark = "No soy sauce", option = "Large", total = 51.60, status = "Active"),
        OrderDetails(orderID = 23, menuItemID = 17, quantity = 1, remark = "Extra wasabi", option = "Cold", total = 11.20, status = "Active"),
        OrderDetails(orderID = 24, menuItemID = 18, quantity = 3, remark = "Less shrimp", option = "Medium", total = 27.00, status = "Active"),
        OrderDetails(orderID = 24, menuItemID = 19, quantity = 1, remark = "Extra rice", option = "Hot", total = 10.50, status = "Active"),
        OrderDetails(orderID = 25, menuItemID = 20, quantity = 2, remark = "No nuts", option = "Large", total = 17.00, status = "Active"),
        OrderDetails(orderID = 25, menuItemID = 21, quantity = 1, remark = "Extra mango", option = "Cold", total = 8.80, status = "Active"),
        OrderDetails(orderID = 26, menuItemID = 21, quantity = 1, remark = "Extra mango", option = "Cold", total = 8.80, status = "Active"),
        OrderDetails(orderID = 27, menuItemID = 21, quantity = 1, remark = "Extra mango", option = "Cold", total = 8.80, status = "Active"),
        OrderDetails(orderID = 28, menuItemID = 21, quantity = 1, remark = "Extra mango", option = "Cold", total = 8.80, status = "Active"),
        OrderDetails(orderID = 29, menuItemID = 21, quantity = 1, remark = "Extra mango", option = "Cold", total = 8.80, status = "Active"),
        OrderDetails(orderID = 30, menuItemID = 21, quantity = 1, remark = "Extra mango", option = "Cold", total = 8.80, status = "Active"),
    )

    val voucherList = listOf(
        Voucher(image = "voucher_image_rm1.jpg", description = "RM1 Off", code = "VOUCHERRM1", value = 1.0, expiryDateTime = 1719705600000, status = "Active"),
        Voucher(image = "voucher_image_rm3.jpg", description = "RM3 Off", code = "VOUCHERRM3", value = 3.0, expiryDateTime = 1719705600000, status = "Active"),
        Voucher(image = "voucher_image_rm10.jpg", description = "RM10 Off", code = "VOUCHERRM10", value = 10.0, expiryDateTime = 1719705600000, status = "Active")
    )

    val menuListImage = listOf(
        R.drawable.classiccheeseburger,
        R.drawable.californiaroll,
        R.drawable.bibimbap,
        R.drawable.nasilemak,
        R.drawable.tomyumsouppic,
        R.drawable.latte,
        R.drawable.bbqribs,
        R.drawable.sushiplatter,
        R.drawable.kimchifriedrice,
        R.drawable.satay,
        R.drawable.meerebus,
        R.drawable.mangostickyrice,
        R.drawable.kimchifriedrice,
        R.drawable.chickenkatsu,
        R.drawable.pineapplefriedrice,
        R.drawable.greencurry,
        R.drawable.prawnmee,
        R.drawable.asamlaksa,
        R.drawable.bakkutteh,
        R.drawable.bubbletea,
        R.drawable.spaghettiaglioolio,
        R.drawable.tempuraplatter,
        R.drawable.bulgogi,
        R.drawable.roticanai,
        R.drawable.greenpapayasalad,
        R.drawable.lemontea,
        R.drawable.tehtarik,
        R.drawable.chawanmushi,
        R.drawable.bibimnaengmyeon,
        R.drawable.airbandung,
    )

}